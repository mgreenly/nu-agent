# Rubocop configuration for nu-agent
# Only applied to new and modified files during Console I/O refactoring

AllCops:
  TargetRubyVersion: 3.1
  NewCops: enable
  SuggestExtensions: false
  Exclude:
    - 'vendor/**/*'
    - 'bin/**/*'
    - 'db/**/*'

plugins:
  - rubocop-rspec

# Style preferences
Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/FrozenStringLiteralComment:
  Enabled: true

# Layout preferences
Layout/LineLength:
  Max: 120

# Metrics - reasonable limits for new code
Metrics/MethodLength:
  Max: 25
  Exclude:
    - 'lib/nu/agent/console_io.rb'  # Complex input parsing requires longer methods
    - 'lib/nu/agent/history.rb'  # Database initialization with WAL recovery detection
    - 'lib/nu/agent/configuration_loader.rb'  # Model configuration with reset logic requires longer method
    - 'lib/nu/agent/background_worker_manager.rb'  # Worker initialization with multiple config checks
    - 'lib/nu/agent/commands/admin_command.rb'  # CLI command handlers with display formatting
    - 'lib/nu/agent/commands/workers/exchange_summarizer_command.rb'  # Status display with metrics formatting

Metrics/ClassLength:
  Max: 250
  Exclude:
    - 'lib/nu/agent/console_io.rb'  # Single-file console I/O implementation
    - 'lib/nu/agent/history.rb'  # Database management class with many methods
    - 'lib/nu/agent/formatter.rb'  # Message formatting and event handling with many display methods

Metrics/BlockLength:
  Exclude:
    - 'spec/**/*'
    - 'rakelib/**/*'  # Rake task definitions may require long blocks
    - 'migrations/**/*'  # Migration scripts may require long blocks
    - 'lib/nu/agent/history.rb'  # Transaction blocks for data purging require atomicity

# Disable some overly strict cops
Style/Documentation:
  Enabled: false

Metrics/AbcSize:
  Max: 25
  Exclude:
    - 'lib/nu/agent/console_io.rb'  # Complex input parsing
    - 'lib/nu/agent/history.rb'  # Database initialization with WAL recovery detection
    - 'lib/nu/agent/configuration_loader.rb'  # Model configuration with reset logic has high ABC size
    - 'lib/nu/agent/commands/admin_command.rb'  # CLI command handlers with display formatting and error handling
    - 'lib/nu/agent/commands/workers/exchange_summarizer_command.rb'  # Status display with metrics collection and formatting
    - 'lib/nu/agent/workers/exchange_summarizer.rb'  # Exchange processing with multiple conditional checks

Metrics/CyclomaticComplexity:
  Max: 10
  Exclude:
    - 'lib/nu/agent/console_io.rb'  # Escape sequence parsing has many branches

Metrics/PerceivedComplexity:
  Max: 10
  Exclude:
    - 'lib/nu/agent/console_io.rb'  # Escape sequence parsing complexity

Metrics/ParameterLists:
  Max: 5
  Exclude:
    - 'lib/nu/agent/workers/conversation_summarizer.rb'  # Worker needs multiple dependencies for initialization
    - 'lib/nu/agent/workers/exchange_summarizer.rb'  # Worker needs multiple dependencies for initialization
    - 'lib/nu/agent/embedding_store.rb'  # Search methods need multiple optional filter parameters

# Lint - acceptable patterns
Lint/HashCompareByIdentity:
  Exclude:
    - 'lib/nu/agent/history.rb'  # Thread-local connection pool uses object_id intentionally

# RSpec configuration
RSpec/MultipleExpectations:
  Max: 20  # Allow comprehensive tests with multiple related assertions

RSpec/ExampleLength:
  Max: 45  # Allow setup, execution, and verification within examples

RSpec/ContextWording:
  Enabled: false  # Allow descriptive context names

RSpec/NoExpectationExample:
  Enabled: false  # Allow examples that test side effects or setup

RSpec/MultipleMemoizedHelpers:
  Max: 16  # Allow sufficient test setup helpers (increased for event_bus addition)

RSpec/MessageSpies:
  Enabled: false  # Allow both receive and have_received patterns

RSpec/VerifiedDoubles:
  Enabled: false  # Allow both double and instance_double

RSpec/DescribeMethod:
  Enabled: false  # Allow flexible describe block descriptions

RSpec/SpecFilePathFormat:
  Enabled: false  # Allow flexible spec file naming

RSpec/StubbedMock:
  Enabled: false  # Allow both allow and expect patterns for mocking

RSpec/InstanceVariable:
  Enabled: false  # Allow instance variables in tests when appropriate

RSpec/NestedGroups:
  Max: 5  # Allow reasonable nesting of describe/context blocks

RSpec/IndexedLet:
  Enabled: false  # Allow tool1, tool2 etc when testing collections

RSpec/AnyInstance:
  Enabled: false  # Allow any_instance stubbing when necessary

RSpec/VerifiedDoubleReference:
  Enabled: false  # Allow string references in instance_double when class constant not available
